steps:

- pwsh: |
    tree /f /a "$(System.ArtifactsDirectory)"
  displayName: Show artifacts directory

- pwsh: |
    $signedPath = "$(Build.ArtifactStagingDirectory)\temp"
    if (-not (Test-Path $signedPath))
    {
        New-Item $signedPath -ItemType Directory -Verbose
    }
  displayName: Ensure signed directory exists

- task: PkgESCodeSign@10
  displayName: Sign Assemblies
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
  inputs:
    signConfigXml: '$(Build.SourcesDirectory)\tools\release\codeSigning.xml'
    inPathRoot: '$(System.ArtifactsDirectory)\out'
    outPathRoot: '$(Build.ArtifactStagingDirectory)\temp'

- pwsh: |
    Import-Module "$(Build.SourcesDirectory)/tools/release/ReleaseTools.psm1"
    Assert-FilesAreSigned -Path "$(Build.ArtifactStagingDirectory)/temp"

- pwsh: |
    Import-Module "$(Build.SourcesDirectory)/tools/release/ReleaseTools.psm1"
    Copy-SignedFiles -SignedDirPath "$(Build.ArtifactStagingDirectory)/temp" -Destination "$(Build.ArtifactStagingDirectory)/signed"
  displayName: 'Copy signed files into place'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: PSArm'
  inputs:
    artifactName: signed
    pathToPublish: '$(Build.ArtifactStagingDirectory)\signed'
