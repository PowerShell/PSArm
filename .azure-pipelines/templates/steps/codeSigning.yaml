steps:

- checkout: ComplianceRepo
  displayName: 'Checkout the ComplianceRepo'

- checkout: self

- pwsh: |
    tree /f /a '$(Build.ArtifactStagingDirectory)'
  displayName: Show artifacts directory

- template: EsrpSign.yml@ComplianceRepo
  parameters:
    buildOutputPath: '$(Build.ArtifactStagingDirectory)/PSArm'
    signOutputPath: '$(Build.ArtifactStagingDirectory)/FirstPartySigned'
    alwaysCopy: true
    certificateId: 'CP-230012' # Authenticode certificate
    useMinimatch: true # Enable globbing
    pattern: |
      PSArm/PSArm.dll
      PSArm/*.{ps1,psm1,psd1,ps1xml}

- template: EsrpSign.yml@ComplianceRepo
  parameters:
    buildOutputPath: '$(Build.ArtifactStagingDirectory)/FirstPartySigned'
    signOutputPath: '$(Build.ArtifactStagingDirectory)/ThirdPartySigned'
    alwaysCopy: true
    certificateId: 'CP-231522' # Third-party certificate
    useMinimatch: true # This enables the use of globbing
    pattern: |
      PSArm/Newtonsoft.Json.dll

- pwsh: |
    Import-Module '$(Build.SourcesDirectory)/PSArm/tools/release/ReleaseTools.psm1'
    Assert-FilesAreSigned -Path '$(System.ArtifactsDirectory)/ThirdPartySigned'
  displayName: Validate that files are signed

- publish: '$(Build.ArtifactStagingDirectory)/ThirdPartySigned'
  artifact: PSArm
  displayName: Publish signed artifacts
